# Generated by Django 2.0.5 on 2018-05-23 17:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=64, verbose_name='城市名称')),
            ],
            options={
                'verbose_name_plural': '城市管理',
            },
        ),
        migrations.CreateModel(
            name='MassageProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_name', models.CharField(max_length=64, verbose_name='项目名称')),
                ('suit_human', models.TextField(verbose_name='适宜人群')),
                ('recuperate_method', models.TextField(verbose_name='调理方法')),
                ('recuperate_flow', models.TextField(verbose_name='调理流程')),
                ('maintain_method', models.TextField(verbose_name='自我保养方法')),
                ('need_time', models.PositiveIntegerField(verbose_name='项目时间(分钟)')),
                ('image', models.ImageField(blank=True, upload_to='upload', verbose_name='项目照片')),
            ],
            options={
                'verbose_name_plural': '按摩项目',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_name', models.CharField(max_length=64, verbose_name='门店名称')),
                ('area', models.CharField(max_length=64, verbose_name='所在区域')),
                ('address', models.CharField(max_length=64, verbose_name='详细地址')),
                ('image', models.ImageField(blank=True, upload_to='upload', verbose_name='门店照片')),
                ('lat', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='纬度')),
                ('lng', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='经度')),
                ('city', models.ForeignKey(on_delete=None, to='shop_manager.City', verbose_name='所属城市')),
                ('program', models.ManyToManyField(to='shop_manager.MassageProgram', verbose_name='包含项目')),
            ],
            options={
                'verbose_name_plural': '门店管理',
            },
        ),
        migrations.CreateModel(
            name='SymptomCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptom_name', models.CharField(max_length=32, verbose_name='症状名称')),
                ('symptom_english_name', models.CharField(max_length=32, verbose_name='症状英文名称')),
            ],
            options={
                'verbose_name_plural': '症状分类',
            },
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=32, verbose_name='姓名')),
                ('price', models.FloatField(verbose_name='价格/分钟')),
                ('evaluate_grade', models.FloatField(verbose_name='评分')),
                ('profile', models.TextField(verbose_name='个人简介')),
            ],
            options={
                'verbose_name_plural': '调理师管理',
            },
        ),
        migrations.AddField(
            model_name='shop',
            name='technician',
            field=models.ManyToManyField(to='shop_manager.Technician', verbose_name='技师'),
        ),
        migrations.AddField(
            model_name='massageprogram',
            name='program_category',
            field=models.ForeignKey(on_delete=None, to='shop_manager.SymptomCategory', verbose_name='所属分类'),
        ),
        migrations.AddField(
            model_name='massageprogram',
            name='technician',
            field=models.ManyToManyField(to='shop_manager.Technician', verbose_name='调理师'),
        ),
    ]
